---
import type { CollectionEntry } from 'astro:content';
import { format } from 'date-fns';
import BaseLayout from '~/components/layout/base-layout.astro';
import { getPostsCollection } from '~/lib/mdx/post';

const posts = await getPostsCollection();

const yearList = Object.entries(
  posts.reduce<{ [year: string]: CollectionEntry<'posts'>[] }>((ac, post) => {
    const year = new Date(post.data.date).getFullYear();
    if (!ac[year]) ac[year] = [];
    ac[year].push(post);
    return ac;
  }, {}),
).sort(([yearA], [yearB]) => +yearB - +yearA);
---

<BaseLayout>
  <h1 class="font-display text-5xl font-bold">Post List Page</h1>
  <div class="group mt-14 space-y-7 border-l pl-4">
    {
      yearList.map(([year, postList]) => {
        return (
          <div class="group/year relative">
            <div class="absolute -left-20 -mx-1 select-none rounded-md px-1 transition group-hover/year:bg-gray-soft group-hover/year:text-text-1 group-hover/year:!opacity-100 group-hover:opacity-40">
              <h3 class="">{year}</h3>
            </div>
            <ul class="flex flex-col items-start gap-2">
              {postList.map((post) => {
                return (
                  <li>
                    <a
                      href={`/posts/${post.slug}`}
                      class="-mx-1 flex items-center gap-2 rounded-md px-1 transition hover:bg-gray-soft hover:!opacity-100 group-hover:opacity-60"
                    >
                      <span class="text-text-1">{post.data.title}</span>
                      <span class="flex-shrink-0 text-sm text-text-2">
                        {format(new Date(post.data.date), 'MM. dd.')}
                      </span>
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        );
      })
    }
  </div>
</BaseLayout>
