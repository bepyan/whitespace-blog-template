---
import type { CollectionEntry } from 'astro:content';
import { format } from 'date-fns';

interface Props {
  posts: CollectionEntry<'posts'>[];
}

const { posts } = Astro.props;

const yearList = Object.entries(
  posts.reduce<{ [year: string]: CollectionEntry<'posts'>[] }>((ac, post) => {
    const year = new Date(post.data.date).getFullYear();
    if (!ac[year]) ac[year] = [];
    ac[year].push(post);
    return ac;
  }, {}),
).sort(([yearA], [yearB]) => +yearB - +yearA);
---

<div class="group my-14 space-y-7 border-l pl-4">
  {
    yearList.map(([year, postList]) => {
      return (
        <div class="group/year relative">
          <div class="absolute -left-20 select-none">
            <h2 class="group-hover/year:bg-gray-soft -mx-1 rounded-md px-1 transition group-hover:opacity-40 group-hover/year:opacity-100!">
              {year}
            </h2>
          </div>
          <ul class="flex flex-col items-start gap-2">
            {postList.map((post) => {
              return (
                <li>
                  <a
                    href={`/posts/${post.slug}`}
                    class="hover:bg-gray-soft -mx-1 flex items-center gap-2 rounded-md px-1 transition group-hover:opacity-60 hover:opacity-100!"
                  >
                    <span class="text-text-1">{post.data.title}</span>
                    <span class="text-text-2 shrink-0 text-sm">
                      {format(new Date(post.data.date), 'MM. dd.')}
                    </span>
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      );
    })
  }
</div>
